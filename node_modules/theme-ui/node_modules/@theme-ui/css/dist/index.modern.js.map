{"version":3,"file":"index.modern.js","sources":["../src/index.ts"],"sourcesContent":["import {\n  CSSObject,\n  ThemeUIStyleObject,\n  ThemeDerivedStyles,\n  Theme,\n  ThemeUICSSObject,\n} from './types'\n\nexport * from './types'\n\nexport function get(\n  obj: object,\n  key: string | number | undefined,\n  def?: unknown,\n  p?: number,\n  undef?: unknown\n): any {\n  const path = key && typeof key === 'string' ? key.split('.') : [key]\n  for (p = 0; p < path.length; p++) {\n    obj = obj ? (obj as any)[path[p]!] : undef\n  }\n  return obj === undef ? def : obj\n}\n\nexport const defaultBreakpoints = [40, 52, 64].map((n) => n + 'em')\n\nconst defaultTheme = {\n  space: [0, 4, 8, 16, 32, 64, 128, 256, 512],\n  fontSizes: [12, 14, 16, 20, 24, 32, 48, 64, 72],\n}\n\nconst aliases = {\n  bg: 'backgroundColor',\n  m: 'margin',\n  mt: 'marginTop',\n  mr: 'marginRight',\n  mb: 'marginBottom',\n  ml: 'marginLeft',\n  mx: 'marginX',\n  my: 'marginY',\n  p: 'padding',\n  pt: 'paddingTop',\n  pr: 'paddingRight',\n  pb: 'paddingBottom',\n  pl: 'paddingLeft',\n  px: 'paddingX',\n  py: 'paddingY',\n} as const\ntype Aliases = typeof aliases\n\nexport const multiples = {\n  marginX: ['marginLeft', 'marginRight'],\n  marginY: ['marginTop', 'marginBottom'],\n  paddingX: ['paddingLeft', 'paddingRight'],\n  paddingY: ['paddingTop', 'paddingBottom'],\n  scrollPaddingX: ['scrollPaddingLeft', 'scrollPaddingRight'],\n  scrollPaddingY: ['scrollPaddingTop', 'scrollPaddingBottom'],\n  size: ['width', 'height'],\n}\n\nexport const scales = {\n  color: 'colors',\n  backgroundColor: 'colors',\n  borderColor: 'colors',\n  caretColor: 'colors',\n  columnRuleColor: 'colors',\n  opacity: 'opacities',\n  margin: 'space',\n  marginTop: 'space',\n  marginRight: 'space',\n  marginBottom: 'space',\n  marginLeft: 'space',\n  marginX: 'space',\n  marginY: 'space',\n  marginBlock: 'space',\n  marginBlockEnd: 'space',\n  marginBlockStart: 'space',\n  marginInline: 'space',\n  marginInlineEnd: 'space',\n  marginInlineStart: 'space',\n  padding: 'space',\n  paddingTop: 'space',\n  paddingRight: 'space',\n  paddingBottom: 'space',\n  paddingLeft: 'space',\n  paddingX: 'space',\n  paddingY: 'space',\n  paddingBlock: 'space',\n  paddingBlockEnd: 'space',\n  paddingBlockStart: 'space',\n  paddingInline: 'space',\n  paddingInlineEnd: 'space',\n  paddingInlineStart: 'space',\n  scrollPadding: 'space',\n  scrollPaddingTop: 'space',\n  scrollPaddingRight: 'space',\n  scrollPaddingBottom: 'space',\n  scrollPaddingLeft: 'space',\n  scrollPaddingX: 'space',\n  scrollPaddingY: 'space',\n  inset: 'space',\n  insetBlock: 'space',\n  insetBlockEnd: 'space',\n  insetBlockStart: 'space',\n  insetInline: 'space',\n  insetInlineEnd: 'space',\n  insetInlineStart: 'space',\n  top: 'space',\n  right: 'space',\n  bottom: 'space',\n  left: 'space',\n  gridGap: 'space',\n  gridColumnGap: 'space',\n  gridRowGap: 'space',\n  gap: 'space',\n  columnGap: 'space',\n  rowGap: 'space',\n  fontFamily: 'fonts',\n  fontSize: 'fontSizes',\n  fontWeight: 'fontWeights',\n  lineHeight: 'lineHeights',\n  letterSpacing: 'letterSpacings',\n  border: 'borders',\n  borderTop: 'borders',\n  borderRight: 'borders',\n  borderBottom: 'borders',\n  borderLeft: 'borders',\n  borderWidth: 'borderWidths',\n  borderStyle: 'borderStyles',\n  borderRadius: 'radii',\n  borderTopRightRadius: 'radii',\n  borderTopLeftRadius: 'radii',\n  borderBottomRightRadius: 'radii',\n  borderBottomLeftRadius: 'radii',\n  borderTopWidth: 'borderWidths',\n  borderTopColor: 'colors',\n  borderTopStyle: 'borderStyles',\n  borderBottomWidth: 'borderWidths',\n  borderBottomColor: 'colors',\n  borderBottomStyle: 'borderStyles',\n  borderLeftWidth: 'borderWidths',\n  borderLeftColor: 'colors',\n  borderLeftStyle: 'borderStyles',\n  borderRightWidth: 'borderWidths',\n  borderRightColor: 'colors',\n  borderRightStyle: 'borderStyles',\n  borderBlock: 'borders',\n  borderBlockEnd: 'borders',\n  borderBlockEndStyle: 'borderStyles',\n  borderBlockEndWidth: 'borderWidths',\n  borderBlockStart: 'borders',\n  borderBlockStartStyle: 'borderStyles',\n  borderBlockStartWidth: 'borderWidths',\n  borderBlockStyle: 'borderStyles',\n  borderBlockWidth: 'borderWidths',\n  borderEndEndRadius: 'radii',\n  borderEndStartRadius: 'radii',\n  borderInline: 'borders',\n  borderInlineEnd: 'borders',\n  borderInlineEndStyle: 'borderStyles',\n  borderInlineEndWidth: 'borderWidths',\n  borderInlineStart: 'borders',\n  borderInlineStartStyle: 'borderStyles',\n  borderInlineStartWidth: 'borderWidths',\n  borderInlineStyle: 'borderStyles',\n  borderInlineWidth: 'borderWidths',\n  borderStartEndRadius: 'radii',\n  borderStartStartRadius: 'radii',\n  outlineColor: 'colors',\n  boxShadow: 'shadows',\n  textShadow: 'shadows',\n  zIndex: 'zIndices',\n  width: 'sizes',\n  minWidth: 'sizes',\n  maxWidth: 'sizes',\n  height: 'sizes',\n  minHeight: 'sizes',\n  maxHeight: 'sizes',\n  flexBasis: 'sizes',\n  size: 'sizes',\n  blockSize: 'sizes',\n  inlineSize: 'sizes',\n  maxBlockSize: 'sizes',\n  maxInlineSize: 'sizes',\n  minBlockSize: 'sizes',\n  minInlineSize: 'sizes',\n  // svg\n  fill: 'colors',\n  stroke: 'colors',\n} as const\ntype Scales = typeof scales\n\nconst positiveOrNegative = (scale: object, value: string | number) => {\n  if (typeof value !== 'number' || value >= 0) {\n    if (typeof value === 'string' && value.startsWith('-')) {\n      const valueWithoutMinus = value.substring(1)\n      const n = get(scale, valueWithoutMinus, valueWithoutMinus)\n      return `-${n}`\n    }\n    return get(scale, value, value)\n  }\n  const absolute = Math.abs(value)\n  const n = get(scale, absolute, absolute)\n  if (typeof n === 'string') return '-' + n\n  return Number(n) * -1\n}\n\nconst transforms = [\n  'margin',\n  'marginTop',\n  'marginRight',\n  'marginBottom',\n  'marginLeft',\n  'marginX',\n  'marginY',\n  'marginBlock',\n  'marginBlockEnd',\n  'marginBlockStart',\n  'marginInline',\n  'marginInlineEnd',\n  'marginInlineStart',\n  'top',\n  'bottom',\n  'left',\n  'right',\n].reduce(\n  (acc, curr) => ({\n    ...acc,\n    [curr]: positiveOrNegative,\n  }),\n  {}\n)\n\nconst responsive = (\n  styles: Exclude<ThemeUIStyleObject, ThemeDerivedStyles>\n) => (theme?: Theme) => {\n  const next: Exclude<ThemeUIStyleObject, ThemeDerivedStyles> = {}\n  const breakpoints =\n    (theme && (theme.breakpoints as string[])) || defaultBreakpoints\n  const mediaQueries = [\n    null,\n    ...breakpoints.map((n) => `@media screen and (min-width: ${n})`),\n  ]\n\n  for (const k in styles) {\n    const key = k as keyof typeof styles\n    let value = styles[key]\n    if (typeof value === 'function') {\n      value = value(theme || {})\n    }\n\n    if (value == null) continue\n    if (!Array.isArray(value)) {\n      next[key] = value\n      continue\n    }\n    for (let i = 0; i < value.slice(0, mediaQueries.length).length; i++) {\n      const media = mediaQueries[i]\n      if (!media) {\n        next[key] = value[i]\n        continue\n      }\n      next[media] = next[media] || {}\n      if (value[i] == null) continue\n      ;(next[media] as Record<string, any>)[key] = value[i]\n    }\n  }\n\n  return next\n}\n\ntype CssPropsArgument = { theme: Theme } | Theme\n\nexport const css = (args: ThemeUIStyleObject = {}) => (\n  props: CssPropsArgument = {}\n): CSSObject => {\n  const theme: Theme = {\n    ...defaultTheme,\n    ...('theme' in props ? props.theme : props),\n  }\n  let result: CSSObject = {}\n  const obj = typeof args === 'function' ? args(theme) : args\n  const styles = responsive(obj)(theme)\n\n  for (const key in styles) {\n    const x = styles[key as keyof typeof styles]\n    const val = typeof x === 'function' ? x(theme) : x\n\n    if (key === 'variant') {\n      const variant = css(get(theme, val as string))(theme)\n      result = { ...result, ...variant }\n      continue\n    }\n\n    if (val && typeof val === 'object') {\n      // TODO: val can also be an array here. Is this a bug? Can it be reproduced?\n      result[key] = css(val as ThemeUICSSObject)(theme)\n      continue\n    }\n\n    const prop = key in aliases ? aliases[key as keyof Aliases] : key\n    const scaleName = prop in scales ? scales[prop as keyof Scales] : undefined\n    const scale = get(theme, scaleName as any, get(theme, prop, {}))\n    const transform: any = get(transforms, prop, get)\n    const value = transform(scale, val, val)\n\n    if (prop in multiples) {\n      const dirs = multiples[prop as keyof typeof multiples]\n\n      for (let i = 0; i < dirs.length; i++) {\n        result[dirs[i]] = value\n      }\n    } else {\n      result[prop] = value\n    }\n  }\n\n  return result\n}\n"],"names":["get","obj","key","def","p","undef","path","split","length","defaultBreakpoints","map","n","defaultTheme","space","fontSizes","aliases","bg","m","mt","mr","mb","ml","mx","my","pt","pr","pb","pl","px","py","multiples","marginX","marginY","paddingX","paddingY","scrollPaddingX","scrollPaddingY","size","scales","color","backgroundColor","borderColor","caretColor","columnRuleColor","opacity","margin","marginTop","marginRight","marginBottom","marginLeft","marginBlock","marginBlockEnd","marginBlockStart","marginInline","marginInlineEnd","marginInlineStart","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","paddingBlock","paddingBlockEnd","paddingBlockStart","paddingInline","paddingInlineEnd","paddingInlineStart","scrollPadding","scrollPaddingTop","scrollPaddingRight","scrollPaddingBottom","scrollPaddingLeft","inset","insetBlock","insetBlockEnd","insetBlockStart","insetInline","insetInlineEnd","insetInlineStart","top","right","bottom","left","gridGap","gridColumnGap","gridRowGap","gap","columnGap","rowGap","fontFamily","fontSize","fontWeight","lineHeight","letterSpacing","border","borderTop","borderRight","borderBottom","borderLeft","borderWidth","borderStyle","borderRadius","borderTopRightRadius","borderTopLeftRadius","borderBottomRightRadius","borderBottomLeftRadius","borderTopWidth","borderTopColor","borderTopStyle","borderBottomWidth","borderBottomColor","borderBottomStyle","borderLeftWidth","borderLeftColor","borderLeftStyle","borderRightWidth","borderRightColor","borderRightStyle","borderBlock","borderBlockEnd","borderBlockEndStyle","borderBlockEndWidth","borderBlockStart","borderBlockStartStyle","borderBlockStartWidth","borderBlockStyle","borderBlockWidth","borderEndEndRadius","borderEndStartRadius","borderInline","borderInlineEnd","borderInlineEndStyle","borderInlineEndWidth","borderInlineStart","borderInlineStartStyle","borderInlineStartWidth","borderInlineStyle","borderInlineWidth","borderStartEndRadius","borderStartStartRadius","outlineColor","boxShadow","textShadow","zIndex","width","minWidth","maxWidth","height","minHeight","maxHeight","flexBasis","blockSize","inlineSize","maxBlockSize","maxInlineSize","minBlockSize","minInlineSize","fill","stroke","positiveOrNegative","scale","value","startsWith","valueWithoutMinus","substring","absolute","Math","abs","Number","transforms","reduce","acc","curr","responsive","styles","theme","next","breakpoints","mediaQueries","k","Array","isArray","i","slice","media","css","args","props","result","x","val","variant","prop","scaleName","undefined","transform","dirs"],"mappings":"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"}