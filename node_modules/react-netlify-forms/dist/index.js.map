{"version":3,"file":"index.js","sources":["../src/netlify-form-context.js","../src/honeypot.js","../src/utils.js","../src/netlify-form-reducer.js","../src/netlify-form-component.js","../src/netlify-form.js","../src/recaptcha.js"],"sourcesContent":["import React from 'react'\n\nexport const NetlifyFormContext = React.createContext()\nNetlifyFormContext.displayName = 'NetlifyFormContext'\n\nexport const NetlifyFormProvider = ({ children, ...props }) => (\n  <NetlifyFormContext.Provider value={{ ...props }}>\n    {children}\n  </NetlifyFormContext.Provider>\n)\n\nexport function useNetlifyFormContext() {\n  return React.useContext(NetlifyFormContext)\n}\n","import React from 'react'\nimport { useNetlifyFormContext } from './netlify-form-context'\n\nexport const Honeypot = ({\n  label = `Leave the following field empty:`,\n  ...props\n}) => {\n  const { handleChange, honeypotName } = useNetlifyFormContext()\n\n  return (\n    <p hidden>\n      <label>\n        {label}{' '}\n        <input\n          type='text'\n          {...props}\n          name={honeypotName}\n          onChange={handleChange}\n        />\n      </label>\n    </p>\n  )\n}\n","import React from 'react'\n\nexport const encodeFormData = (data) => {\n  const formData = new FormData()\n\n  for (const key of Object.keys(data)) {\n    formData.append(key, data[key])\n  }\n\n  return formData\n}\n\nexport const isFunction = (x) => typeof x === 'function'\n\nexport const isEmptyChildren = (x) => React.Children.count(x) === 0\n","export default function (state, action) {\n  const { type, payload } = action\n  switch (type) {\n    case 'CHANGE_FORM_DATA': {\n      const { name, value, type } = payload\n      return {\n        ...state,\n        values: {\n          ...state.values,\n          [name]: type !== 'checkbox' ? value : payload.checked\n        }\n      }\n    }\n    case 'RESET_FORM': {\n      const initialData = payload\n      return {\n        ...state,\n        values: initialData\n      }\n    }\n    case 'SET_SUCCESS':\n      return {\n        ...state,\n        success: true,\n        error: false,\n        submitting: false,\n        submitted: true\n      }\n    case 'SET_ERROR':\n      return { ...state, success: false, error: true, submitting: false }\n    case 'SET_SUBMITTING':\n      return { ...state, submitting: true }\n    case 'SET_HONEYPOT_NAME':\n      return { ...state, honeypotName: payload }\n    case 'ENABLE_RECAPTCHA':\n      return { ...state, recaptchaEnabled: payload }\n    default:\n      throw new Error(`Action type \"${type}\" is not defined.`)\n  }\n}\n","import React from 'react'\nimport { isFunction, isEmptyChildren } from './utils'\nimport { useNetlifyFormContext } from './netlify-form-context'\n\nexport const NetlifyFormComponent = ({ children, ...props }) => {\n  const context = useNetlifyFormContext()\n  const {\n    formRef,\n    formName,\n    formAction,\n    honeypotName,\n    recaptchaEnabled,\n    handleSubmit,\n    handleReset\n  } = context\n\n  const netlifyProps = {}\n  if (honeypotName) {\n    netlifyProps['data-netlify-honeypot'] = honeypotName\n  }\n  if (recaptchaEnabled) {\n    netlifyProps['data-netlify-recaptcha'] = true\n  }\n\n  return (\n    <form\n      ref={formRef}\n      method='post'\n      name={formName}\n      action={formAction}\n      onSubmit={handleSubmit}\n      onReset={handleReset}\n      data-netlify\n      {...netlifyProps}\n      {...props}\n    >\n      {/* The `form-name` hidden field is required to support form submissions without JavaScript */}\n      <input type='hidden' name='form-name' value={formName} />\n\n      {children\n        ? isFunction(children)\n          ? children(context)\n          : !isEmptyChildren(children)\n          ? children\n          : null\n        : null}\n    </form>\n  )\n}\n","import React from 'react'\nimport { encodeFormData } from './utils'\nimport NetlifyFormReducer from './netlify-form-reducer'\nimport { NetlifyFormProvider } from './netlify-form-context'\nimport { NetlifyFormComponent } from './netlify-form-component'\n\nexport const useNetlifyForm = ({\n  name = 'Form',\n  action = '',\n  honeypotName = '',\n  enableRecaptcha = false,\n  onSuccess = () => {},\n  onFailure = () => {}\n}) => {\n  const initialValues = {}\n  const initialState = {\n    success: false,\n    error: false,\n    submitting: false,\n    submitted: false,\n    response: null,\n    values: initialValues,\n    formName: name,\n    formAction: action,\n    honeypotName,\n    recaptchaEnabled: enableRecaptcha,\n    recaptchaInvisible: false\n  }\n  const [state, dispatch] = React.useReducer(NetlifyFormReducer, initialState)\n  const formRef = React.useRef(null)\n  const recaptchaRef = React.useRef(null)\n\n  const handleChange = ({ target: { name, value, files } }) => {\n    dispatch({\n      type: 'CHANGE_FORM_DATA',\n      payload:\n        files != null && files.length > 0\n          ? { name, value: files[0] }\n          : { name, value }\n    })\n  }\n  const handleReset = () => {\n    dispatch({\n      type: 'RESET_FORM',\n      payload: initialValues\n    })\n  }\n  const handleSubmit = async (event = null, values = {}) => {\n    if (event) {\n      event.preventDefault()\n    }\n\n    const formData = {\n      'form-name': state.formName,\n      ...values,\n      ...state.values\n    }\n\n    if (state.recaptchaEnabled) {\n      if (recaptchaRef.current === null) {\n        throw new Error(\n          'reCAPTCHA is enabled but reference not found, make sure you render the reCAPTCHA-component somewhere.'\n        )\n      }\n      const isRecaptchaInvisible =\n        recaptchaRef.current.props.size === 'invisible'\n      const recaptchaValue = isRecaptchaInvisible\n        ? await recaptchaRef.current.executeAsync()\n        : recaptchaRef.current.getValue()\n\n      formData['g-recaptcha-response'] = recaptchaValue\n    }\n\n    dispatch({ type: 'SET_SUBMITTING' })\n\n    const response = await fetch('/', {\n      method: 'POST',\n      body: encodeFormData(formData)\n    })\n    const context = { state, formRef, recaptchaRef }\n    if (response.status !== 200) {\n      dispatch({ type: 'SET_ERROR' })\n      return onFailure(response, context)\n    }\n    dispatch({ type: 'SET_SUCCESS' })\n    return onSuccess(response, context)\n  }\n  const setHoneypotName = React.useCallback((ref) => {\n    return dispatch({ type: 'SET_HONEYPOT_NAME', payload: ref })\n  }, [])\n  const enableRecaptchaHandler = React.useCallback((enable) => {\n    return dispatch({ type: 'ENABLE_RECAPTCHA', payload: enable })\n  }, [])\n\n  return {\n    ...state,\n    // add additional handlers for access through context:\n    handleChange,\n    handleSubmit,\n    handleReset,\n    setHoneypotName,\n    enableRecaptcha: enableRecaptchaHandler,\n    // references:\n    formRef,\n    recaptchaRef\n  }\n}\n\nexport const NetlifyForm = ({ children, formProps, ...props }) => {\n  const context = useNetlifyForm(props)\n\n  return (\n    <NetlifyFormProvider {...context}>\n      <NetlifyFormComponent {...formProps}>{children}</NetlifyFormComponent>\n    </NetlifyFormProvider>\n  )\n}\n","import React from 'react'\nimport { useNetlifyFormContext } from './netlify-form-context'\nimport GoogleRecaptcha from 'react-google-recaptcha'\n\nexport const Recaptcha = ({ siteKey = '', invisible = false }) => {\n  const { recaptchaRef } = useNetlifyFormContext()\n\n  return invisible ? (\n    <GoogleRecaptcha sitekey={siteKey} ref={recaptchaRef} size='invisible' />\n  ) : (\n    <GoogleRecaptcha sitekey={siteKey} ref={recaptchaRef} />\n  )\n}\n"],"names":["NetlifyFormContext","React","createContext","displayName","NetlifyFormProvider","children","props","useNetlifyFormContext","useContext","Honeypot","label","handleChange","honeypotName","encodeFormData","data","formData","FormData","Object","keys","key","append","isFunction","x","isEmptyChildren","Children","count","state","action","type","payload","name","value","values","checked","initialData","success","error","submitting","submitted","recaptchaEnabled","Error","NetlifyFormComponent","context","formRef","formName","formAction","handleSubmit","handleReset","netlifyProps","useNetlifyForm","enableRecaptcha","onSuccess","onFailure","initialValues","initialState","response","recaptchaInvisible","useReducer","NetlifyFormReducer","dispatch","useRef","recaptchaRef","target","files","length","event","fetch","method","body","status","preventDefault","recaptchaValue","current","isRecaptchaInvisible","size","executeAsync","getValue","setHoneypotName","useCallback","ref","enableRecaptchaHandler","enable","NetlifyForm","formProps","Recaptcha","siteKey","invisible"],"mappings":"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"}